# 简化版 Docker Compose 配置
# 适用于内核不支持某些特性的环境

services:
  mysql:
    image: mysql:8.0
    container_name: recruitment-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME:-recruitment_db}
      MYSQL_USER: ${DB_USER:-recruitment_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-your_secure_password}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "43306:3306"
    networks:
      - recruitment-network
    # 简化的启动命令，移除一些可能有问题的参数
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    # 简化的健康检查
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: recruitment-redis
    restart: unless-stopped
    # 简化的 Redis 命令
    command: redis-server --requirepass ${REDIS_PASSWORD:-your_redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "46379:6379"
    networks:
      - recruitment-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: recruitment-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      REDIS_HOST: redis
    ports:
      - "45000:5000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - recruitment-network
    volumes:
      - ./backend/uploads:/app/uploads

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:45000/api}
        REACT_APP_ALLOWED_EMAIL_DOMAIN: ${ALLOWED_EMAIL_DOMAIN:-@stu.example.edu.cn}
    container_name: recruitment-frontend
    restart: unless-stopped
    ports:
      - "43000:80"
    depends_on:
      - backend
    networks:
      - recruitment-network

networks:
  recruitment-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data: